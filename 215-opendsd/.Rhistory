adply(pairs[,1:10],2,function(x){
CrossTable(df[,x[1]], df[,x[2]], expected=TRUE)
})
CrossTable(df$queue,df$call_stat,expected=TRUE)
adply(pairs[,1:10],2,function(x){
CrossTable(df[,x[1]], df[,x[2]], expected=TRUE)
})
queue.callstat = CrossTable(df$queue,df$call_stat,expected=TRUE)
write.table(queue.callstat, "/home/damoncrockett/211data/211Tables/queue_callstat.csv", sep=",")
queue.callstat = data.frame(unlist(CrossTable(df$queue,df$call_stat,expected=TRUE)))
write.table(queue.callstat, "/home/damoncrockett/211data/211Tables/queue_callstat.csv", sep=",")
CrossTable(how_hear, call_stat, expected=TRUE)
CrossTable(df$how_hear, df$call_stat, expected=TRUE)
adply(pairs[,1:10],2,function(x){
CrossTable(df[,x[1]], df[,x[2]], expected=TRUE)
})
adply(pairs[,11:20],2,function(x){
CrossTable(df[,x[1]], df[,x[2]], expected=TRUE)
})
adply(pairs[,11:16],2,function(x){
CrossTable(df[,x[1]], df[,x[2]], expected=TRUE)
})
write.table(chi.tests, '/home/damoncrockett/211data/211Tables/211chi.csv', sep=',')
(9/10)+(5/8)+(4.5/9)+(0/9)+(9/9)
9+5+4.5+9
27.5/45
28.5/45
30.5/45
29.5/45
.25*(1/3)+(2/3)*.1
1/30
1/24
1/22
1/21
1/18
1/17
1/16
2/17
3/31
2/31
.066666666
(.05*(1/3))/(.15*.066666666)
(.05*(1/3))/(2*.15*.066666666)
p.brown = 0.0666
p.blue.mm = 0.25
p.brown.mm = 0.10
p.blue.brown.mm = 2*p.blue.mm*p.brown.mm
p.mm = 0.333
p.star = .666
p.blue.star = 0.10
p.blue = p.mm*p.blue.mm + p.star*p.blue.star
p.blue.brown = 2*p.blue*p.brown
p.mm.blue.brown = (p.blue.brown.mm*p.mm)/p.blue.brown
sqrt(.25)
1 - pnorm(125,109,5)
pnorm(56,55,4) - pnorm(52,55,4)
1 - (0.04+0.1056+0.372)
kid.exp = pnorm(48,53,5)
adult.exp = 1 - pnorm(60,53,5)
avg.exp = pnorm(56,53,5) - pnorm(52,53,5)
kid.exp.prop = pnorm(48,53,5)
adult.exp.prop = 1 - pnorm(60,53,5)
avg.exp.prop = pnorm(56,53,5) - pnorm(52,53,5)
no.exp.prop = 1 - (kid.exp.prop+adult.exp.prop+avg.exp.prop)
exp.counts = 48*c(no.exp.prop,kid.exp.prop,avg.exp.prop,adult.exp.prop)
obs.counts = c(10,11,12,15)
chisq.test(obs.counts,exp.counts)
chisq.test(obs.counts,exp.counts)
chisq.test(exp.counts,obs.counts)
load("~/Desktop/201a.midterm.Rdata")
student.data
df = student.data
df$imp = df$post.test - df.pre.test
df$imp = df$post.test - df$pre.test
df
20*mean(df$imp > 0)
binom.test(16,20,.5)
binom.test(16,20,.5, alternative="greater")
binom.test(16,20,.5, alternative='greater')
length(subset(student.data, student.data$Sex == 'M' & student.data$GRE.math > 495))
student.data
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'F' & student.data$GRE.math > 495))
length(student.data$Sex[student.data$Sex == 'M'])
length(student.data$Sex[student.data$Sex == 'F'])
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math <= 495))
length(subset(student.data$GRE.math, student.data$Sex == 'F' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'F' & student.data$GRE.math <= 495))
10/16
likelihood = 10/16
4*likelihood
exp.women.not = 4-exp.women.above
exp.women.above = 4*likelihood
exp.women.not = 4-exp.women.above
chisq.test
?chisq.test
df = data.frame('obs.above' = c(10,0), 'obs.not' = c(6,4), 'exp.above' = c(10,2.5), 'exp.not' = c(6,1.5))
df$above.diff.sq = (df$obs.above - df$exp.above)^2
df$not.diff.sq = (df$obs.not - df$exp.not)^2
df$above.chi = (df$obs.above - df$exp.above)^2 / df$exp.above
df$not.chi = (df$obs.not - df$exp.not)^2 / df$exp.not
X2 = sum(df$above.chi+df$not.chi)
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'M' & student.data$GRE.math <= 495))
length(subset(student.data$GRE.math, student.data$Sex == 'F' & student.data$GRE.math > 495))
length(subset(student.data$GRE.math, student.data$Sex == 'F' & student.data$GRE.math <= 495))
student.data[student.data$GRE.math > 495]
student.data[student.data$GRE.math > 495,]
student.data$GRE.math[student.data$GRE.math > 495,]
student.data$GRE.math[student.data$GRE.math > 495]
student.data$GRE.math > 495
student.data$above.495 = student.data$GRE.math > 495
student.data
?chisq.test
chisq.test(student.data$Sex, student.data$above.495, simulate.p.value = TRUE)
student.data$imp = student.data$post.test - student.data$pre.test
20*mean(student.data$imp > 0)
binom.test(16,20,.5,alternative='greater')
t.test(student.data$pre.test,student.data$post.test,paired=TRUE)
binom.test(16,20,.5,alternative='greater')
student.data$imp = student.data$post.test - student.data$pre.test
mean.women = mean(student.data$imp[student.data$Sex == "F"])
mean.men = mean(student.data$imp[student.data$Sex == "M"])
library(PSYC201)
set.seed(12733) # To make sure I know what you're getting if you run this yourself...
par(mar = c(4,4,1,1)) # To make sure you can see the graphs when I run this...
memory.exp
cont.sc = subset(memory.exp,Group=='Control')$Score
exp.sc = subset(memory.exp,Group=='Experimental')$Score
mean(cont.sc)
mean(exp.sc)
mean.diff = mean(exp.sc) - mean(cont.sc)
mean.diff
exp.n = length(exp.sc)
cont.n = length(cont.sc)
s.pooled = sqrt(((exp.n-1)*sd(exp.sc)^2 + (cont.n-1)*sd(cont.sc)^2)/(exp.n + cont.n - 2))
s.pooled
s.pooled = sqrt(0.5 * (sd(cont.sc)^2 + sd(exp.sc)^2))
s.pooled
se.pooled = s.pooled*sqrt(1/20+1/20)
t.two = mean.diff/se.pooled
df.t = 20 + 20 - 2
p = 2*(1-pt(t.two,df = df.t))
t.test(exp.sc,cont.sc)
t.test(student.data$imp[student.data$Sex == "F"], student.data$imp[student.data$Sex == "M"], var.equal=FALSE)
student.data$imp = student.data$post.test - student.data$pre.test
t.test(student.data$imp[student.data$Sex == "F"], student.data$imp[student.data$Sex == "M"], var.equal=FALSE)
t.test(student.data$imp[student.data$Sex == "F"], student.data$imp[student.data$Sex == "M"], var.equal=TRUE)
t.test(student.data$imp[student.data$Sex == "F"], student.data$imp[student.data$Sex == "M"], var.equal=FALSE)
load("~/Desktop/201a.midterm.Rdata")
load("~/Desktop/201a.midterm.Rdata")
?chisq.test
kid.exp.prop = pnorm(48,53,5)
adult.exp.prop = 1 - pnorm(60,53,5)
avg.exp.prop = pnorm(56,53,5) - pnorm(52,53,5)
no.exp.prop = 1 - (kid.exp.prop+adult.exp.prop+avg.exp.prop)
obs.counts = c(10,11,12,15)
exp.p = c(no.exp.prop,kid.exp.prop,avg.exp.prop,adult.exp.prop)
chisq.test(obs.counts, p = exp.p)
exp.counts = 48*c(no.exp.prop,kid.exp.prop,avg.exp.prop,adult.exp.prop)
df = data.frame('obs'=obs.counts, 'exp'=exp.counts)
df$chi = (df$obs.counts - df$exp.counts)^2 / df$exp.counts
df$X = (df$obs.counts - df$exp.counts)^2 / df$exp.counts
df
df$X = (df$obs - df$exp)^2 / df$exp
sum(df$X)
pchisq(40.34266,df=3)
1-pchisq(40.34266,df=3)
kid.exp.prop = pnorm(48,53,5)
adult.exp.prop = 1 - pnorm(60,53,5)
avg.exp.prop = pnorm(56,53,5) - pnorm(52,53,5)
no.exp.prop = 1 - (kid.exp.prop+adult.exp.prop+avg.exp.prop)
exp.p = c(no.exp.prop,kid.exp.prop,avg.exp.prop,adult.exp.prop)
obs.counts = c(10,11,12,15)
chisq.test(obs.counts,p=exp.p)
df = read.csv('http://vulstats.ucsd.edu/data/cal10202.txt', sep='\t', header=T)
head(cal10202)
head(df)
rm(df)
load(url('http://vulstats.ucsd.edu/data/cal1020.cleaned.Rdata'))
head(cal1020)
head(cal1020)
head(cal1020)
unique(cal1020$Division)
cal1020[cal1020$Division == '10 Mile M 0- 0',]
library(ggplot)
library(ggplot2)
ggplot(cal1020, aes(x=Age, y=speed.mph)) + geom_point()
ggplot(cal1020$wheelchair=='FALSE', aes(x=Age, y=speed.mph)) + geom_point()
ggplot(cal1020[cal1020$wheelchair=='FALSE'], aes(x=Age, y=speed.mph)) + geom_point()
ggplot(cal1020[cal1020$wheelchair=='FALSE',], aes(x=Age, y=speed.mph)) + geom_point()
ggplot(cal1020, aes(x=Age)) + geom_histogram()
ggplot(cal1020, aes(x=Age)) + geom_histogram(fill=Age)
ggplot(cal1020, aes(x=Age)) + geom_histogram(fill=cal1020$Age)
ggplot(cal1020, aes(x=Age), fill=Age) + geom_histogram()
) + geom_histogram()
ggplot(cal1020, aes(x=Age), fill=..count..) + geom_histogram()
ggplot(cal1020, aes(x=Age), fill=..count..) + geom_histogram(binwidth=5)
ggplot(cal1020, aes(x=Age), fill=..count..) + geom_histogram(binwidth=1)
ggplot(cal1020, aes(x=Age), color=..count..) + geom_histogram(binwidth=1)
ggplot(cal1020, aes(x=Age), fill=..count..) + geom_histogram(binwidth=1)
str(cal1020)
ggplot(cal1020, aes(x=time.sec), fill=..count..) + geom_histogram(binwidth=1)
ggplot(cal1020, aes(x=time.sec), fill=..count..) + geom_histogram(binwidth=100)
ggplot(cal1020, aes(x=Age)) + geom_histogram(aes(fill=..count..),binwidth=1)
ggplot(cal1020, aes(x=time.sec)) + geom_histogram(aes(fill=..count..,binwidth=100)
ggplot(cal1020, aes(x=time.sec)) + geom_histogram(aes(fill=..count..,binwidth=100))
ggplot(cal1020, aes(x=time.sec)) + geom_histogram(aes(fill=..count..,binwidth=100))
ggplot(cal1020, aes(x=time.sec)) + geom_histogram(aes(fill=..count..),binwidth=100))
ggplot(cal1020, aes(x=time.sec)) + geom_histogram(aes(fill=..count..),binwidth=100)
str(cal1020)
speed.age.lm = lm(speed.mph ~ Age, data=cal1020[cal1020$wheelchair==F,])
summary(speed.age.lm)
library(PSYC201)
head(mtcars)
mpg ~ disp + hp + wt
cars.lm = lm(mpg ~ disp + hp + wt, data = mtcars)
summary(cars.lm)
lm(mpg~wt,data=mtcars)
lm(mpg~disp+hp+wt,data=mtcars)
cars.lm = lm(mpg ~ disp + hp + wt, data = mtcars)
summary(cars.lm)
cars.lm = lm(mpg ~ disp + hp + wt, data = mtcars)
cars.lm.2 = lm(mpg ~ wt, data = mtcars)
anova(cars.lm,cars.lm.2)
cars.lm = lm(mpg ~ wt+disp+hp, data=mtcars)
anova(cars.lm,cars.lm.2)
anova(cars.lm)
cars.lm.2 = lm(mpg ~ disp+hp+wt, data=mtcars)
anova(cars.lm.2)
anova(cars.lm)
car.lm = lm(dist~speed,data=cars)
b0 = coef(car.lm)[1]
b1 = coef(car.lm)[2]
qplot(speed,dist,data = cars) + geom_abline(intercept=b0,slope=b1)
diagnostic.plot(car.lm,type = 'residuals')
diagnostic.plot(car.lm,type = 'qq')
diagnostic.plot(car.lm,type='fitted')
diagnostic.plot(car.lm,type='predictor')
diagnostic.plot(car.lm,type='predictor',predictor='speed')
diagnostic.plot(car.lm,type='predictor')
diagnostic.plot(car.lm,type = 'abs predictor')
diagnostic.plot(car.lm,type = 'time')
qplot(0,y=cars$speed,geom='boxplot')
qplot(0,y=cars$dist,geom='boxplot')
with(cars,plot(speed,dist))
diagnostic.plot(car.lm,type='influence')
diagnostic.plot(car.lm)
mtcars.lm = lm(mpg ~ disp + hp + wt, data = mtcars)
diagnostic.plot(mtcars.lm)
diagnostic.plot(mtcars.lm)
set.seed(563728)
x1 = round(runif(14,-2,2),3)
x2 = x1 + round(rnorm(14,0,.5),3)
y = round(1 + .5*x1 + x2 + rnorm(14,0,.7),3)
samp.dat.base = data.frame('y'=y,'x1'=x1,'x2'=x2)
rm(x1,x2,y)
samp.dat = rbind(samp.dat.base,c(2.641,1.976,-1.863))
samp.lm.out = lm(y ~ x1 + x2,data = samp.dat)
summary(samp.lm.out)
mean.m = 94
mean.w = 95
sd.m = 18
sd.w = 10
n = 194
men = rnorm(97,94,18)
women = rnorm(97,95,10)
cor.test(men,women)
cor.test(men,women)
cor.test(men,women)
cor.test(men,women)
cor.test(men,women)
men = rnorm(97,94,18)
women = rnorm(97,95,10)
cor.test(men,women)
r = .24
sqrt(1-r^2)*sqrt(194-2)
13.45142*r
.24*sqrt(192)
3.325538/sqrt(1-r^2)
qt(1-.5,192)
df = read.csv('~/Desktop/DSD_time_to_issue.csv')
df$X = NULL
str(df)
unique(df$Type)
table(df$Type)
sort(table(df$Type))
reg = lm(data=df, DaystoIssue ~ Type)
summary(reg)
anova(reg)
setwd("~/vosd.org/215-opendsd")
df = read.csv('DSD_time_to_issue.csv')
str(df)
head(df)
levels(df$IssuedBy)
NULL
df$X = NULL
str(df)
summary(lm(data=df, DaystoIssue~Type))
summary(lm(data=df, DaystoIssue~Latitude))
summary(lm(data=df, DaystoIssue~Longitude))
summary(lm(data=df, DaystoIssue~Latitude+Longitude))
sort(table(df$IssuedBy))
shaw = subset(df, df$IssuedBy == 'Shaw Jr, Andy')
mean(shaw$DaystoIssue)
table(shaw$Type)
df = read.csv('~/Desktop/DSD_time_to_issue.csv')
df$X = NULL
summary(lm(data=df, DaystoIssue~Type))
summary(lm(data=df, SecondstoIssue~Type))
library(ggplot2)
qplot(df$SecondstoIssue)
qplot(df$SecondstoIssue[df$SecondstoIssue < 60])
length(df$SecondstoIssue[df$SecondstoIssue < 60])
qplot(df$DaystoIssue)
qplot(df$DaystoIssue[df$DaystoIssue < 30])
qplot(df$DaystoIssue[df$DaystoIssue < 10])
length(df$SecondstoIssue[df$DaysstoIssue ==0])
length(df$SecondstoIssue[df$DaystoIssue ==0])
mean(df$DaystoIssue)
mean(df$DaystoIssue[df$DaystoIssue > 0])
summary(df$DaystoIssue)
qplot(df$DaystoIssue[df$DaystoIssue < 20])
qplot(df$DaystoIssue[df$DaystoIssue < 90])
qplot(df$DaystoIssue[df$DaystoIssue > 0])
mean(df$DaystoIssue[df$DaystoIssue > 10])
mean(df$DaystoIssue[df$DaystoIssue > 0])
qplot(df$DaystoIssue[df$DaystoIssue > 10])
qplot(df$DaystoIssue[df$DaystoIssue > 30])
qplot(df$DaystoIssue[df$DaystoIssue > 100])
qplot(df$DaystoIssue[df$DaystoIssue > 0])
qplot(df$DaystoIssue[df$DaystoIssue > 0], binwidth=10)
qplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 500), binwidth=10)
qplot(subset(df$DaystoIssue, df$DaystoIssue > 0 & df$DaystoIssue < 500), binwidth=10)
qplot(subset(df$DaystoIssue, df$DaystoIssue > 0 & df$DaystoIssue < 100), binwidth=10)
qplot(subset(df$DaystoIssue, df$DaystoIssue > 0 & df$DaystoIssue < 100), binwidth=1)
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 100), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black')
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 100), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 100), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 1),1)) +
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 100), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 1),1))
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 100), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 1),1))
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 200), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 1),1))
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 365), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 1),1))
ggplot(subset(df, df$DaystoIssue > 0 & df$DaystoIssue < 500), aes(x=DaystoIssue)) +
geom_histogram(fill='white', color='black', binwidth=1) +
scale_x_continuous(breaks = round(seq(min(df$DaystoIssue), max(df$DaystoIssue), by = 10),1))
df[df$DaystoIssue==349,]
df[df$DaystoIssue==349,]
ggplot(df, aes(x=IssuedBy)) +
geom_histogram(fill='white', color='black')
individual_count = rle(sort(c(as.character(df$IssuedBy))))
df$individual_count = individual_count[[1]][match(df$IssuedBy, individual_count[[2]])]
ggplot(df, aes(reorder(IssuedBy, individual_count))) +
geom_histogram(fill='white', color='black')
ggplot(df, aes(x=df$year)) +
geom_histogram(fill='white', color='black', binwidth=1)
str(df)
ggplot(df, aes(x=df$appY)) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$appY))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$issY))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$appM))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$issM))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$appD))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$issD))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$appday))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$issday))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$apph))) +
geom_histogram(fill='white', color='black', binwidth=1)
ggplot(df, aes(x=factor(df$issh))) +
geom_histogram(fill='white', color='black', binwidth=1)
anova(lm(data=df, SecondstoIssue~Type))
df['zero'] = df$DaystoIssue==0
anova(lm(data=df, zero~Type))
summary(lm(data=df, zero~Type))
table(df$zero)
type_count = rle(sort(c(as.character(df$Type))))
df$type_count = type_count[[1]][match(df$Type, type_count[[2]])]
ggplot(df, aes(reorder(Type, type_count))) +
geom_histogram(fill='white', color='black')
ggplot(df, aes(x=factor(Type), y=DaystoIssue)) +
geom_point()
ggplot(df, aes(x=factor(Type), y=DaystoIssue)) +
geom_boxplot()
ggplot(df[df$DaystoIssue < 500], aes(x=factor(Type), y=DaystoIssue)) +
geom_boxplot()
ggplot(df[df$DaystoIssue < 500,], aes(x=factor(Type), y=DaystoIssue)) +
geom_boxplot()
ggplot(df[df$DaystoIssue > 0,], aes(x=factor(Type), y=DaystoIssue)) +
geom_boxplot()
table(df$Type)
sort(table(df$Type))
str(df)
holder_count = rle(sort(c(as.character(df$PermitHolder))))
df$holder_count = holder_count[[1]][match(df$holder_count, holder_count[[2]])]
df$holder_count = holder_count[[1]][match(df$PermitHolder, holder_count[[2]])]
data.frame(rev(sort(table(df$PermitHolder))))
tmp = data.frame(rev(sort(table(df$PermitHolder))))
tmp[1:20]
tmp[1:20,]
class(tmp)
tmp[1:50,]
tmp[1:100,]
tmp[1:25,]
tmp[1:50,]
tmp[1:35,]
tmp[1:38,]
tmp[1:42,]
big.devs = df[df$holder_count > 322,]
35290/216691
summary(lm(data=big.devs, DaystoIssue~PermitHolder))
unique(big.devs$PermitHolder)
anova(lm(data=big.devs, DaystoIssue~Type+PermitHolder))
unique(big.devs$PermitHolder)
anova(lm(data=big.devs, DaystoIssue~Latitude+Longitude+Type+PermitHolder))
anova(lm(data=big.devs, DaystoIssue~PermitHolder+Type))
big.devs[order(big.devs$DaystoIssue)]
str(big.devs)
big.devs = df[df$holder_count > 322, c(7,13)]
big.devs = df[df$holder_count > 322,]
big.devs[order(big.devs$DaystoIssue),]
big.devs[order(big.devs$DaystoIssue), c(7,13)]
library(plyr)
by.dev = ddply(big.devs, c('PermitHolder','Type'),
summarize,
mean.dti = mean(DaystoIssue),
h.count = mean(holder_count))
by.dev
by.dev.type = ddply(big.devs, c('PermitHolder','Type'),
summarize,
mean.dti = mean(DaystoIssue),
h.count = mean(holder_count))
by.dev = ddply(big.devs, c('PermitHolder'),
summarize,
mean.dti = mean(DaystoIssue),
h.count = mean(holder_count))
by.dev
options("scipen"=100, 'digits'=4)
by.dev
by.dev[order(by.dev$mean.dti)]
by.dev[order(by.dev$mean.dti),]
by.dev.type[order(by.dev.type$mean.dti),]
df['big.dev'] = df$holder_count > 322
anova(lm(data=df, DaystoIssue~big.dev))
summary(lm(data=df, DaystoIssue~big.dev))
anova(lm(data=df, DaystoIssue~Type+big.dev))
anova(lm(data=big.devs, DaystoIssue~Type+holder_count))
anova(lm(data=big.devs, DaystoIssue~PermitHolder+Type))
summary(lm(data=big.devs, DaystoIssue~Type+holder_count))
summary(lm(data=big.devs, DaystoIssue~holder_count))
?cut()
head(df)
df['lat.bin'] = cut(df$Latitude, 8)
df['lon.bin'] = cut(df$Longitude, 4)
str(df)
df['quadrant'] = c(df$lat.bin, df$lon.bin)
df['square'] = paste(as.character(df$lat.bin), as.character(df$lon.bin))
str(df)
df['square'] = as.factor(df$square)
str(df)
summary(lm(data=df, DaystoIssue~square))
anova(lm(data=df, DaystoIssue~PermitHolder+Type+square))
anova(lm(data=df, DaystoIssue~Type+square))
big.dev['lat.bin'] = cut(big.dev$Latitude, 8)
big.devs['lat.bin'] = cut(big.devs$Latitude, 8)
big.devs['lon.bin'] = cut(big.devs$Longitude, 4)
big.devs['square'] = paste(as.character(big.devs$lat.bin), as.character(big.devs$lon.bin))
anova(lm(data=big.devs, DaystoIssue~PermitHolder+Type+square))
anova(lm(data=big.devs, DaystoIssue~PermitHolder+square+Type))
david = subset(df, df$IssuedBy == 'Saborio, David')
qplot(david$DaystoIssue)
qplot(david$DaystoIssue > 0)
david
david
david
qplot(david$Type)
ggplot(df, aes(x=Longitude, y= Latitude)) +
geom_point(color='white', size=1)
ggplot(df, aes(x=Longitude, y= Latitude)) +
geom_point(color='white', size=1) +
geom_point(data=david, color='lightblue')
ggplot(df, aes(x=Longitude, y= Latitude)) +
geom_point(color='white', size=1) +
geom_point(data=david, color='lightblue', size=3)
ggplot(df, aes(x=Longitude, y= Latitude)) +
geom_point(color='white', size=1) +
geom_point(data=david, color='lightblue', size=1)
ggplot(df, aes(x=Longitude, y= Latitude)) +
geom_point(color='white', size=1) +
geom_point(data=david, color='lightblue', size=2)
