panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fees)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
dp = subset(d,d$parcels > 9999)
p
?write.csv
write.csv(pp,'/Users/damoncrockett/vosd.org/215-opendsd/tables/major_cpa.csv')
ps = pp[c(1,7),]
ps
ps = pp[,c(1,7)]
ps
d
?match
d$parcels = ps$parcels[match(d$community_name,ps$community_name)]
d
ps
d
d$parcels = ps$parcels[match(d$CPA,ps$community_name)]
d
d$parcels = ps$parcels[match(ps$community_name,d$CPA)]
d$parcels = mapvalues(d$CPA,ps$community_name,ps$parcels)
d
d$parcels = mapvalues(d$CPA,ps$parcels,ps$community_name)
d
?mapvalues
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
ps = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/number_of_parcels_CPA.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
dp = subset(d,d$parcels > 9999)
dp = subset(d,num(d$parcels) > 9999)
dp = subset(d,as.numeric(d$parcels) > 9999)
dp
d$parcels = as.numeric(d.parcels)
d$parcels = as.numeric(d$parcels)
dp = subset(d,d$parcels > 9999)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
ps = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/number_of_parcels_CPA.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
str(d)
d$parcels = as.numeric(as.character(d$parcels))
dp = subset(d,d$parcels > 9999)
dp
write.csv(dp,'/Users/damoncrockett/vosd.org/215-opendsd/tables/major_CPA_year.csv')
p
pp
profiles = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/CPA_profiles_2.csv')
profiles
profiles
source('~/vosd.org/215-opendsd/scripts/invoice_CPA.R')
pp
d = read.csv('tweets_urban_areas.csv')
library(ggplot2)
ggplot(d,aes(lon,lat)) + geom_point()
d = read.csv('yahoo_chk.csv')
dd = d[sample(nrow(d), 1000000), ]
dd = d[sample(nrow(d), 10000), ]
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
library(ggplot2)
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
ggplot(dd,aes(lon,lat)) +
geom_point()
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
nyc = read.csv('/Users/damoncrockett/images_nyc/nyc_metadata.csv')
la = read.csv('/Users/damoncrockett/images_la/la_metadata.csv')
library(ggplot2)
ggplot(nyc,aes(hue)) + geom_histogram() +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram() +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "white"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(nyc,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC HUE')
ggplot(nyc,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC HUE')
ggplot(nyc,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC SAT')
ggplot(nyc,aes(val)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='NYC VAL')
ggplot(la,aes(val)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA VAL')
ggplot(la,aes(sat)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA SAT')
ggplot(la,aes(hue)) + geom_histogram(color='white') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15)) +
labs(title='LA HUE')
rep(c('Fall','Winter','Spring'), times=7)
rep(c('09','10','11','12','13'), each=3)
d = data.frame(term=rep(c('Fall','Winter','Spring'), times=7),
year=c('08',rep(c('09','10','11','12','13'), each=3),'14','14'),
program_year = rep(c(1:7),each=3))
d = data.frame(term=rep(c('Fall','Winter','Spring'), times=7),
year=c('08',rep(c('09','10','11','12','13','14'), each=3),'15','15'),
program_year = rep(c(1:7),each=3))
d
d$gpa = c(3.5,3.85,4,4,4,3.7,4,4,NA,4,4,NA,NA,4,NA,NA,NA,NA,NA,NA,4)
f = read.csv('/Users/damoncrockett/Desktop/US_HSV_modes_top60_cities_urban-areas.csv')
str(f)
f = f[c("lat","lon","urban_areas")]
rev(sort(table(f$urban_areas)))
la = subset(f,f$urban_areas == "Los Angeles--Long Beach--Anaheim, CA")
nyc = subset(f,f$urban_areas == "New York--Newark, NY--NJ--CT")
chi = subset(f,f$urban_areas == "Chicago, IL--IN")
dallas = subset(f,f$urban_areas == "Dallas--Fort Worth--Arlington, TX")
dc = subset(f,f$urban_areas == "Washington, DC--VA--MD")
houston = subset(f,f$urban_areas == "Houston, TX")
sd = subset(f,f$urban_areas == "San Diego, CA")
sf = subset(f,f$urban_areas == "San Francisco--Oakland, CA")
austin = subset(f,f$urban_areas == "Austin, TX")
sa = subset(f,f$urban_areas == "San Antonio, TX")
vegas = subset(f,f$urban_areas == "Las Vegas--Henderson, NV")
phoenix = subset(f,f$urban_areas == "Phoenix--Mesa, AZ")
center_la = c(lon=-118.2500, lat=34.0500)
library(ggmap)
center_la = c(lon=-118.2500, lat=34.0500)
center_nyc = c(lon=-74.0059, lat=40.7127)
center_chi = c(lon=-87.6847, lat=41.8369)
center_dallas = c(lon=-96.7970, lat=32.7767)
center_dc = c(lon=-77.0164, lat=38.9047)
center_houston = c(lon=-95.3698, lat=29.7604)
center_sd = c(lon=-117.1625, lat=32.7150)
center_sf = c(lon=-122.4167, lat=37.7833)
center_austin = c(lon=-97.7500, lat=30.2500)
center_sa = c(lon=-98.5000, lat=29.4167)
center_vegas = c(lon=-115.1739, lat=36.1215)
center_phoenix = c(lon=-112.0667, lat=33.4500)
la_map = get_map(location = center_la,
source = "osm",
zoom = 14,
color = "bw")
nyc_map = get_map(location = center_nyc,
source = "osm",
zoom = 14,
color = "bw")
chi_map = get_map(location = center_chi,
source = "osm",
zoom = 14,
color = "bw")
dallas_map = get_map(location = center_dallas,
source = "osm",
zoom = 14,
color = "bw")
dc_map = get_map(location = center_dc,
source = "osm",
zoom = 14,
color = "bw")
houston_map = get_map(location = center_houston,
source = "osm",
zoom = 14,
color = "bw")
sd_map = get_map(location = center_sd,
source = "osm",
zoom = 14,
color = "bw")
sf_map = get_map(location = center_sf,
source = "osm",
zoom = 14,
color = "bw")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 14,
color = "bw")
sa_map = get_map(location = center_sa,
source = "osm",
zoom = 14,
color = "bw")
vegas_map = get_map(location = center_vegas,
source = "osm",
zoom = 14,
color = "bw")
phoenix_map = get_map(location = center_phoenix,
source = "osm",
zoom = 14,
color = "bw")
ggmap(la_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(nyc_map) +
geom_point(data = nyc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(chi_map) +
geom_point(data = chi, aes(x = lon, y = lat),
size = 1,
color = "blue")
la_map = get_map(location = center_la,
source = "osm",
zoom = 10,
color = "bw")
nyc_map = get_map(location = center_nyc,
source = "osm",
zoom = 10,
color = "bw")
chi_map = get_map(location = center_chi,
source = "osm",
zoom = 10,
color = "bw")
dallas_map = get_map(location = center_dallas,
source = "osm",
zoom = 10,
color = "bw")
dc_map = get_map(location = center_dc,
source = "osm",
zoom = 10,
color = "bw")
houston_map = get_map(location = center_houston,
source = "osm",
zoom = 10,
color = "bw")
sd_map = get_map(location = center_sd,
source = "osm",
zoom = 10,
color = "bw")
sf_map = get_map(location = center_sf,
source = "osm",
zoom = 10,
color = "bw")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 10,
color = "bw")
sa_map = get_map(location = center_sa,
source = "osm",
zoom = 10,
color = "bw")
vegas_map = get_map(location = center_vegas,
source = "osm",
zoom = 10,
color = "bw")
phoenix_map = get_map(location = center_phoenix,
source = "osm",
zoom = 10,
color = "bw")
ggmap(la_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(nyc_map) +
geom_point(data = nyc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(chi_map) +
geom_point(data = chi, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(dallas_map) +
geom_point(data = dallas, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(dc_map) +
geom_point(data = dc, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sd_map) +
geom_point(data = sd, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sf_map) +
geom_point(data = sf, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(austin_map) +
geom_point(data = la, aes(x = lon, y = lat),
size = 1,
color = "blue")
austin_map = get_map(location = center_austin,
source = "osm",
zoom = 4,
color = "bw")
head(austin$lon,200)
head(austin$lat,200)
ggmap(austin_map) +
geom_point(data = austin, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(sa_map) +
geom_point(data = sa, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(vegas_map) +
geom_point(data = vegas, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggmap(phoenix_map) +
geom_point(data = phoenix, aes(x = lon, y = lat),
size = 1,
color = "blue")
ggplot(la,aes(lon)) + geom_histogram(color="blue",fill="grey50") +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="blue",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="white",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT')
ggplot(la,aes(lon)) + geom_histogram(color="white",fill="grey50") +
theme(panel.background = element_rect(fill = "grey50"),
panel.grid.major = element_line(color = "grey50"),
panel.grid.minor = element_line(color = "grey50"),
plot.background = element_rect(fill = "grey50"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(color='white', size = 10)) +
labs(x='LONGITUDE',y='COUNT',title="LA")
lats = seq(from = 32.8522562177,
to = 32.8707305527,
by = 0.0000000001)
lons = seq(from = -117.267083726,
to = -117.24521069,
by = 0.0000000001)
df = data.frame(lat = sample(lats,2048,replace=T),
lon = sample(lons,2048,replace=T))
write.csv(df,'random_geo_lj_2.csv')
pwd
printwd()
pwd()
(364/365)*(364/365)
(364/365)^3
(364/365)^10
(364/365)^30
van_gogh_genres <- read.delim("~/Downloads/van_gogh_genres.txt", header=FALSE)
View(van_gogh_genres)
xx =van_gogh_genres
tablE(xx$Label_Place)
table(xx$Label_Place)
table(xx$V14)
table(xx$V11)
table(xx$V12)
setwd("~/vosd.org/215-opendsd/tables")
d = read.csv('owners.csv')
d
d$count = NULL
d
library(ggplot2)
ggplot(d,aes(TotalAmount,asr_total)) + geom_text(aes(label=d$own_name1))
ggplot(d,aes(TotalAmount,asr_total)) + geom_text(aes(label=d$own_name1),size=2)
d$int = c(1:50)
ggplot(d,aes(TotalAmount,asr_total)) + geom_text(aes(label=d$int),size=2)
ggplot(d[,c(3:50)],aes(TotalAmount,asr_total)) + geom_text(aes(label=d$int),size=2)
ggplot(d[:,c(3:50)],aes(TotalAmount,asr_total)) + geom_text(aes(label=d$int),size=2)
ggplot(d[c(3:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d$int),size=2)
ggplot(d[c(3:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d[c(3:50),]$int),size=2)
ggplot(d[c(4:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d[c(4:50),]$int),size=2)
ggplot(d[c(9:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d[c(9:50),]$int),size=2)
ggplot(d[c(9:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d[c(9:50),]$int),size=5)
cor.test(d$TotalAmount,d$asr_total)
cor.test(d[c(9:50),]$TotalAmount,d[c(9:50),]$asr_total)
d = read.csv('owners.csv')
d$count = NULL
d$int = c(1:50)
library(ggplot2)
ggplot(d[c(9:50),],aes(TotalAmount,asr_total)) + geom_text(aes(label=d[c(9:50),]$int),size=5)
cor.test(d$TotalAmount,d$asr_total)
cor.test(d[c(9:50),]$TotalAmount,d[c(9:50),]$asr_total)
cor.test(d$TotalAmount,d$asr_impr)
cor.test(d[c(9:50),]$TotalAmount,d[c(9:50),]$asr_impr)
ggplot(d[c(9:50),],aes(TotalAmount,asr_impr)) + geom_text(aes(label=d[c(9:50),]$int),size=5)
df = read.csv('owners_tot.csv')
df
cor.test(df$TotalAmount,df$asr_impr)
ggplot(df,aes(TotalAmount,asr_impr)) + geom_point()
d
d
d = read.csv('owners.csv')
d$count = NULL
d$int = c(1:50)
library(ggplot2)
ggplot(d[c(9:50),],aes(TotalAmount,asr_impr)) + geom_text(aes(label=d[c(9:50),]$int),size=5)
cor.test(d$TotalAmount,d$asr_impr)
cor.test(d[c(9:50),]$TotalAmount,d[c(9:50),]$asr_impr)
####owners_tot
df = read.csv('owners_tot.csv')
cor.test(df$TotalAmount,df$asr_impr)
ggplot(df,aes(TotalAmount,asr_impr)) + geom_point()
ggplot(d[c(9:50),],aes(TotalAmount,asr_impr)) + geom_text(aes(label=d[c(9:50),]$int),size=5)
ggplot(d,aes(TotalAmount,asr_impr)) + geom_text(aes(label=$int),size=5)
ggplot(d,aes(TotalAmount,asr_impr)) + geom_text(aes(label=d$int),size=5)
cor.test(d$TotalAmount,d$asr_impr)
