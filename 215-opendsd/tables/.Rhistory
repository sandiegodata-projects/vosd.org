m = glm.nb(data=core, count~factor(hour) + temp)
exp(coef(m$'temp'))
exp(coef(m)$'temp')
coef(m)
coef(m)$'temp'
m$'temp'
m$coef['temp']
exp(m$coef['temp'])
m = glm.nb(data=core[core$temp > 69,], count~factor(hour) + temp)
exp(m$coef['temp'])
m = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
exp(m$coef['temp'])
m0 = glm.nb(data=core[core$temp > 65,], count~temp)
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
exp(m1$coef['temp'] * 20)
exp(m1$coef)
exp(m1$coef['temp'] * 20)
library(gmodels)
core = read.csv('/Users/damoncrockett/Dropbox/CALIT2DATA/IGNOAA/instagram_by_resolution.csv')
core$X = NULL
core$rain = core$precipitation > 0.0125
library(MASS)
m0 = glm.nb(data=core,count~temp+rain)
m1 = glm.nb(data=core,count~temp+rain+sky)
m2 = glm.nb(data=core,count~sky)
exp(m1$coef['sky'])
exp(m2$coef['sky'])
str(core)
m = glm.nb(data=core,count~hour+weekday+month+sky+temp+rain+wind)
exp(m$coef)
m = glm.nb(data=core,count~factor(hour)+factor(weekday)+factor(month)+sky+temp+rain+wind)
exp(m$coef)
exp(m$coef*20)
m0 = glm.nb(data=core[core$temp > 65,], count~temp)
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + factor(month) + sky + temp + rain + wind)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
exp(m2$coef['temp'])
exp(m2$coef['temp'] * 20)
m0 = glm.nb(data=core[core$temp > 65,], count~temp + factor(hour))
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
m0 = glm.nb(data=core[core$temp > 65,], count~factor(hour))
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + factor(month) + sky + temp + rain + wind)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
exp(m2$coef['temp'])
exp(m2$coef['temp'] * 20)
m = glm.nb(data=core,count~factor(hour)+factor(weekday)+factor(month)+sky+temp+rain+wind)
exp(m$coef*20)
exp(m$coef)
library(MASS)
core = read.csv('/Users/damoncrockett/Dropbox/CALIT2DATA/IGNOAA/instagram_by_resolution.csv')
core$X = NULL
core$rain = core$precipitation > 0.0125
m0 = glm.nb(data=core,count~factor(hour)+factor(weekday)+sky+temp+rain)
m0 = glm.nb(data=core,count~factor(hour)+factor(weekday)+sky+temp+rain)
m = glm.nb(data=core,count~factor(hour)+factor(weekday)+factor(month)+sky+temp+rain+wind)
exp(m$coef)
exp(m0$coef)
exp(m$coef['sky','temp','rainTRUE'])
exp(m$coef)
exp(m0$coef)
exp(m$coef)
m = glm.nb(data=core,count~factor(hour)+factor(weekday)+sky+temp+rain)
exp(m$coef)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + sky + temp + rain)
exp(m2$coef['temp'])
exp(m2$coef['temp'] * 20)
m0 = glm.nb(data=core[core$temp > 65,], count~factor(hour))
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + sky + temp + rain)
exp(m0$coef['temp'])
m0 = glm.nb(data=core[core$temp > 65,], count~temp
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + sky + temp + rain)
m0 = glm.nb(data=core[core$temp > 65,], count~temp)
m1 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + temp)
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + sky + temp + rain)
exp(m0$coef['temp'])
exp(m1$coef['temp'])
exp(m2$coef['temp'])
m2 = glm.nb(data=core[core$temp > 65,], count~factor(hour) + factor(weekday) + factor(month) + sky + temp + rain)
exp(m2$coef['temp'])
exp(m2$coef['temp'] * 20)
m = glm.nb(data=core,count~factor(hour)+factor(weekday)+factor(month)+sky+temp+rain)
exp(m$coef)
?pbinom
pbinom(5,10,.5)
1-pbinom(12,20,0.5)
1-2*pbinom(12,20,0.5)
1-(2*pbinom(12,20,0.5))
2*pbinom(12,20,.5)
pbinom(12,20,.5)
core = read.csv('/Users/damoncrockett/Dropbox/CALIT2DATA/IGNOAA/instagram_by_resolution.csv')
core$X = NULL
mamjj = subset(core, core$month > 2 & core$month < 8)
library(MASS)
anova(glm.nb(data=mamjj, count~factor(month)))
summary(glm.nb(data=mamjj,count~factor(month)))
d = data.frame(lat = rep(0,times=100), lon = rep(0,times=100))
d
d = data.frame(lat = rep(0,times=1000000), lon = rep(0,times=1000000))
?random
??random
?by
?rep
?range
c(2:10, by=1)
?replicate
lats = seq(from = 24, to = 50, by = 0.0001)
lons = seq(from = -125, to = -68, by = 0.0001)
for (i in 1:1000000) {}
for (i in 1:1000000) {
}
?sample
for (i in 1:1000000) {
d$lat[i] = sample(lats,1,replace=T)
}
d
lats = seq(from = 24, to = 50, by = 0.0001)
lons = seq(from = -125, to = -68, by = 0.0001)
d = data.frame(lat = sample(lats,1000000,replace=T),
lon = sample(lons,1000000,replace-T))
d = data.frame(lat = sample(lats,1000000,replace=T),
lon = sample(lons,1000000,replace=T))
head(d)
write.csv(d,'random_geo_USA.csv')
pwd
wd
wd()
?? working directory
??working directory
??working
??'working directory'
getwd()
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/by_CPA_parcels.csv')
d
d = subset(d,d$parcels > 9000)
library(ggplot2)
ggplot(d,aes(lon,lat)) +
geom_text(data=d,aes(label=community_name)) +
geom_point(data=d,aes(color=asr_total))
ggplot(d,aes(lon,lat)) +
geom_text(data=d,aes(label=community_name)) +
geom_point(data=d,aes(color=asr_total),size=10)
ggplot(d,aes(lon,lat)) +
geom_text(data=d,aes(label=community_name),size=2) +
geom_point(data=d,aes(color=asr_total),size=15)
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=15) +
geom_text(data=d,aes(label=community_name),size=2)
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=45) +
geom_text(data=d,aes(label=community_name),size=2,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=25) +
geom_text(data=d,aes(label=community_name),size=3,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=35) +
geom_text(data=d,aes(label=community_name),size=3,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=35) +
geom_text(data=d,aes(label=community_name),size=1,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=35) +
geom_text(data=d,aes(label=community_name),size=2,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=55) +
geom_text(data=d,aes(label=community_name),size=10,color='white')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=55) +
geom_text(data=d,aes(label=community_name),size=10,color='white') +
scale_color_continuous(low='red',high='green')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=75) +
geom_text(data=d,aes(label=community_name),size=7,color='white') +
scale_color_continuous(low='red',high='green')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=125) +
geom_text(data=d,aes(label=community_name),size=10,color='white') +
scale_color_continuous(low='red',high='green')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_total),size=105) +
geom_text(data=d,aes(label=community_name),size=9,color='white') +
scale_color_continuous(low='red',high='green')
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_impr,size=asr_land)) +
geom_text(data=d,aes(label=community_name),size=9,color='white') +
scale_color_continuous(low='red',high='green') +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "blue"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_impr,size=asr_land)) +
geom_text(data=d,aes(label=community_name),size=9,color='white') +
scale_color_continuous(low='red',high='green') +
scale_size_continuous(range=c(20,100))
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(d,aes(lon,lat)) +
geom_point(data=d,aes(color=asr_impr,size=asr_land)) +
geom_text(data=d,aes(label=community_name),size=9,color='white') +
scale_color_continuous(low='red',high='green') +
scale_size_continuous(range=c(20,100)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/invoices_CPA.csv')
str(d)
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv.csv')
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
str(d)
head(d)
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
str(d)
d
p = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/by_CPA_parcels.csv')
p
library(plyr)
bc = ddply(d,c('CPA'),summarise,
fees = sum(TotalAmount))
bc
p
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_cn_year.csv')
p = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/by_CPA_parcels.csv')
bc = ddply(d,c('community_name'),summarise,
fees = sum(TotalAmount))
bc
p
p$fees = bc$fees
p
library(ggplot2)
ggplot(p,aes(parcels,fees)) + geom_point() + stat_smooth()
ggplot(p,aes(parcels,log(fees))) + geom_point() + stat_smooth()
ggplot(p,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_total,fees)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_land,fees)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_impr,fees)) + geom_point() + stat_smooth(method=lm)
attach(p)
cor.test(parcels,fees)
cor.test(asr_total,fees)
cor.test(asr_land,fees)
cor.test(asr_impr,fees)
p$fpp = p$fees/p$parcels
cor.test(asr_total,fpp)
detach(p)
attach(p)
cor.test(asr_total,fpp)
cor.test(asr_land,fpp)
cor.test(asr_impr,fpp)
cor.test(parcels,fees)
ggplot(p,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_total,fpp)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_land,fpp)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_impr,fpp)) + geom_point() + stat_smooth(method=lm)
library(plyr)
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
p = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/by_CPA_parcels.csv')
bc = ddply(d,c('CPA'),summarise,
fees = sum(TotalAmount))
p
bc
bc = ddply(d[d.CPA!='nan',],c('CPA'),summarise,
fees = sum(TotalAmount))
bc = ddply(d[d$CPA!='nan',],c('CPA'),summarise,
fees = sum(TotalAmount))
p$fees = bc$fees
library(ggplot2)
ggplot(p,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_total,fpp)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_land,fpp)) + geom_point() + stat_smooth(method=lm)
ggplot(p,aes(asr_impr,fpp)) + geom_point() + stat_smooth(method=lm)
attach(p)
detach(all)
detach(p)
attach(p)
source('~/vosd.org/215-opendsd/scripts/invoice_CPA.R')
attach(p)
source('~/vosd.org/215-opendsd/scripts/invoice_CPA.R')
source('~/.active-rstudio-document')
source('~/vosd.org/215-opendsd/scripts/invoice_CPA.R')
cor.test(parcels,fees)
cor.test(asr_total,fpp)
cor.test(asr_land,fpp)
cor.test(asr_impr,fpp)
bc
ggplot(p,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm)
p
p
pp = p[p$parcels > 9999,]
ggplot(pp,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=CPA))
ggplot(pp,aes(parcels,fees)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(pp,aes(asr_total,fpp)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(pp,aes(asr_land,fpp)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(pp,aes(asr_impr,fpp)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(pp,aes(asr_land,fpp)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(pp,aes(asr_impr,fpp)) + geom_point() + stat_smooth(method=lm) + geom_text(aes(label=community_name))
ggplot(p,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name))
ggplot(p,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name)) +
scale_size_continuous(range=c(15,75)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(p,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15) +
scale_size_continuous(range=c(15,75)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(p,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(15,75)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(15,75)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=fees,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(45,125)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fees)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(45,125)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fees)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
ggplot(pp,aes(lon,lat,size=asr_total,color=fpp)) + geom_point() +
geom_text(aes(label=community_name),size=15,color='white') +
scale_size_continuous(range=c(75,225)) +
theme(panel.background = element_rect(fill = "black"),
panel.grid.major = element_line(color = "black"),
panel.grid.minor = element_line(color = "black"),
plot.background = element_rect(fill = "black"),
legend.position="none",
axis.text = element_text(size=rel(0.7), color='white'),
text = element_text(face='plain', color='white', size = 15))
dp = subset(d,d$parcels > 9999)
p
?write.csv
write.csv(pp,'/Users/damoncrockett/vosd.org/215-opendsd/tables/major_cpa.csv')
ps = pp[c(1,7),]
ps
ps = pp[,c(1,7)]
ps
d
?match
d$parcels = ps$parcels[match(d$community_name,ps$community_name)]
d
ps
d
d$parcels = ps$parcels[match(d$CPA,ps$community_name)]
d
d$parcels = ps$parcels[match(ps$community_name,d$CPA)]
d$parcels = mapvalues(d$CPA,ps$community_name,ps$parcels)
d
d$parcels = mapvalues(d$CPA,ps$parcels,ps$community_name)
d
?mapvalues
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
ps = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/number_of_parcels_CPA.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
d
dp = subset(d,d$parcels > 9999)
dp = subset(d,num(d$parcels) > 9999)
dp = subset(d,as.numeric(d$parcels) > 9999)
dp
d$parcels = as.numeric(d.parcels)
d$parcels = as.numeric(d$parcels)
dp = subset(d,d$parcels > 9999)
d
d = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/fees_by_CPA_year.csv')
ps = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/number_of_parcels_CPA.csv')
d$parcels = d$CPA
d$parcels = mapvalues(d$parcels,ps$community_name,ps$parcels)
str(d)
d$parcels = as.numeric(as.character(d$parcels))
dp = subset(d,d$parcels > 9999)
dp
write.csv(dp,'/Users/damoncrockett/vosd.org/215-opendsd/tables/major_CPA_year.csv')
p
pp
profiles = read.csv('/Users/damoncrockett/vosd.org/215-opendsd/tables/CPA_profiles_2.csv')
profiles
profiles
source('~/vosd.org/215-opendsd/scripts/invoice_CPA.R')
pp
d = read.csv('tweets_urban_areas.csv')
library(ggplot2)
ggplot(d,aes(lon,lat)) + geom_point()
d = read.csv('yahoo_chk.csv')
dd = d[sample(nrow(d), 1000000), ]
dd = d[sample(nrow(d), 10000), ]
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
library(ggplot2)
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
ggplot(dd,aes(lon,lat)) +
geom_point()
ggplot(dd,aes(lon,lat)) +
geom_text(aes(label=city))
setwd("~/vosd.org/215-opendsd/tables")
d = read.csv('CPA_profiles_2.csv')
d
d
d
library(ggplot2)
ggplot(d,aes(asr_land,asr_impr)) +
geom_text(aes(label=community_name))
ggplot(d,aes(asr_land,asr_impr)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
ggplot(d[d$parcels > 9000,],aes(asr_land,asr_impr)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
str(d)
ggplot(d[d$parcels > 9000,],aes(fp.permit,asr_total)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
ggplot(d,aes(fp.permit,asr_total)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
ggplot(d[d$parcels>9000,],aes(fp.permit,asr_total)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
ggplot(d[d$parcels>9000,],aes(fp.permit,per.par_ratio)) +
geom_text(aes(label=community_name)) +
stat_smooth(method=lm)
with(d[d$parcels>9000,],cor.test(fp.permit,per.par_ratio))
ggplot(d[d$parcels>9000,],aes(fp.permit,per.par_ratio)) +
geom_text(aes(label=community_name))
